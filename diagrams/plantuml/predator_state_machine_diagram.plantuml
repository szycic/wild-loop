@startuml
title Predator State Machine Diagram

Idle --> Moving : on tick / update()\nincrementAge()\nmove()

state Moving {
    DecideDirection --> Hunt : prey within HUNT_RANGE\ngetNextMoveDirection()\ndirectionTo(prey)
    DecideDirection --> RandomMove : no prey nearby\ngetNextMoveDirection()\nrandom direction
    Hunt --> MoveAction : move()
    RandomMove --> MoveAction : move()
}

Moving --> Eating : eat()

state Eating {
    CheckPrey --> EatPrey : adjacent prey found\nprey.die()\nenergy += HUNT_ENERGY_GAIN
    CheckPrey --> NoPrey : no adjacent prey
}

Eating --> Reproducing : energy >= REPRODUCTION_ENERGY_THRESHOLD / reproduce()
Eating --> Idle : energy < REPRODUCTION_ENERGY_THRESHOLD / nothing happens
Reproducing --> Idle : done reproducing

' Death is checked only after the whole cycle (after returning to Idle)
Idle --> Dead : at end of turn\n(energy <= 0 or age >= maxAge)

@enduml